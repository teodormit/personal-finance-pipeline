#version: '3.8'

services:
#########################################################
  # 1. The Data Warehouse: PostgreSQL
  #########################################################
  postgres:
    container_name: postgres_container
    image: postgres:17
    env_file:
      - .env
    environment:
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql
      - ./postgres-config/postgres.conf:/etc/postgresql/postgresql.conf
      # Uncomment and provide if you have a pg_hba.conf file
      # - ./postgres-config/pg_hba.conf:/etc/postgresql/pg_hba.conf
    ports:
      - "5432:5432"
    restart: unless-stopped
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]

#########################################################
  # 2. The Landing Zone: MinIO Object Storage
  #########################################################
  minio:
    image: minio/minio:latest
    container_name: personal_finance_minio
    restart: always
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER} ## Still loads minioadmin for some reason  # Can try Use env_file: [ .env ] plus environment: - MINIO_ROOT_USER in your docker-compose.yml, then down -v && up -d.
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      # Port for the MinIO API
      - "9000:9000" 
      # Port for the MinIO web console
      - "9001:9001" 
    volumes:
      # Persists the object storage data
      - minio_data:/data 
    networks:
      - data_platform_network
    command: minio server /data --console-address ":9001" # Command to start the MinIO server

#########################################################
  # 3. The EL (Extract-Load) Tool: Airbyte
  #########################################################
# Airbyte has been installed using the Airbyte CLI, so we don't need to define it here.
# It's managed separately and can be started with `abctl local start`.
# Use the start-platform.bat script to start the Airbyte platform and the docker containers


volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  logs:
    driver: local


networks:
  data_platform_network:
    driver: bridge

